import numpy as np
import scipy.stats as stats

# Example data for each stage (replace with your actual CoP data)
opening_data = np.array([12.0, 13.0, 12.0, 13.0, 12.0, 12.0, 12.0, 12.0, 12.0, 13.0, 15.0, 15.0, 14.0, 13.0, 12.0, 13.0, 12.0, 18.0, 12.0, 11.0, 12.0, 12.0, 14.0, 15.0, 16.0, 19.0, 17.0, 15.0, 19.0, 14.0, 12.0, 12.0, 12.0, 12.0, 12.0, 11.0, 12.0, 11.0, 12.0, 12.0, 12.0, 12.0, 13.0, 13.0, 12.0, 14.0, 13.0, 16.0, 15.0, 13.0, 12.0, 11.0, 12.0, 11.0, 12.0, 11.0, 12.0, 14.0, 12.0, 12.0, 12.0, 12.0, 12.0, 13.0, 12.0, 12.0, 12.0, 12.0, 12.0, 15.0, 14.0, 16.0, 12.0, 12.0, 12.0, 13.0, 13.0, 12.0, 14.0, 15.0, 17.0, 13.0, 15.0, 14.0, 14.0, 14.0, 13.0, 12.0, 13.0, 12.0, 9.0, 13.0, 11.0, 11.0, 8.0, 8.0, 12.0, 17.0, 14.0, 7.0, 10.0, 8.0, 16.0, 12.0, 12.0, 10.0, 13.0, 13.0, 14.0, 8.0, 10.0, 8.0, 14.0, 15.0, 15.0, 8.0, 12.0, 12.0, 12.0, 12.0, 11.0, 12.0, 11.0, 10.0, 13.0, 11.0, 13.0, 13.0, 13.0, 14.0, 15.0, 14.0, 16.0, 13.0, 13.0, 12.0, 11.0, 11.0, 11.0, 11.0, 11.0, 15.0, 14.0, 14.0, 17.0, 14.0, 12.0, 12.0, 12.0, 11.0, 11.0, 12.0, 11.0, 12.0, 11.0, 12.0, 12.0, 12.0, 15.0, 11.0, 12.0, 12.0, 11.0, 13.0, 11.0, 12.0, 12.0, 12.0, 13.0, 13.0, 12.0, 11.0, 19.0, 12.0, 13.0, 14.0, 12.0, 12.0, 12.0, 12.0, 12.0, 11.0, 11.0, 11.0, 13.0, 14.0, 15.0, 14.0, 17.0, 14.0, 12.0, 12.0, 11.0, 13.0, 11.0, 12.0, 11.0, 12.0, 11.0, 14.0, 12.0, 12.0, 12.0, 14.0, 12.0, 12.0, 12.0, 12.0, 11.0, 13.0, 12.0, 13.0, 13.0, 13.0, 11.0, 12.0, 11.0, 11.0, 12.0, 11.0, 15.0, 12.0, 10.0, 13.0, 12.0, 11.0, 17.0, 12.0, 12.0, 12.0, 12.0, 13.0, 13.0, 11.0, 11.0, 13.0, 11.0, 11.0, 15.0, 11.0, 12.0, 11.0, 12.0, 12.0, 11.0, 17.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 11.0, 14.0, 11.0, 13.0, 11.0, 11.0, 13.0, 12.0, 13.0, 11.0, 13.0, 14.0, 11.0, 12.0, 11.0, 11.0, 11.0, 12.0, 11.0, 13.0, 11.0, 13.0, 11.0, 11.0, 13.0, 12.0, 15.0, 13.0, 13.0, 13.0, 11.0, 11.0, 11.0, 11.0, 13.0, 12.0, 13.0, 13.0, 12.0, 11.0, 12.0, 12.0, 12.0, 11.0, 12.0, 11.0, 16.0, 11.0, 12.0, 11.0, 11.0, 11.0, 13.0, 11.0, 14.0, 13.0, 14.0, 15.0, 13.0, 12.0, 13.0, 13.0, 12.0, 11.0, 11.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 11.0, 12.0, 13.0, 17.0, 12.0, 12.0, 11.0, 11.0, 10.0, 13.0, 11.0, 12.0, 10.0, 13.0, 10.0, 12.0, 11.0, 15.0, 11.0, 12.0, 11.0, 13.0, 13.0, 15.0, 17.0, 12.0, 12.0, 12.0, 11.0, 13.0, 14.0, 12.0, 11.0, 13.0, 12.0, 13.0, 11.0, 13.0, 11.0, 12.0, 11.0, 11.0, 11.0, 13.0, 12.0, 12.0, 11.0, 10.0, 11.0, 11.0, 11.0, 12.0, 12.0, 12.0, 12.0, 12.0, 11.0, 11.0, 12.0, 13.0, 11.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 11.0, 11.0, 11.0, 11.0, 13.0, 11.0, 12.0, 12.0, 12.0, 12.0, 12.0, 11.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 11.0, 12.0, 12.0, 12.0, 10.0, 11.0, 10.0, 11.0, 13.0, 13.0, 12.0, 18.0, 12.0, 12.0, 12.0, 11.0, 12.0, 13.0, 13.0, 13.0, 13.0, 12.0, 13.0, 13.0, 10.0, 12.0, 10.0, 12.0, 18.0, 10.0, 10.0, 10.0, 12.0, 12.0, 13.0, 13.0, 11.0, 12.0, 13.0, 13.0, 12.0, 12.0, 14.0, 13.0, 15.0, 13.0, 15.0, 15.0, 18.0, 15.0, 13.0, 18.0, 12.0, 12.0, 12.0, 12.0, 13.0, 13.0, 11.0, 12.0, 11.0, 12.0, 11.0, 11.0, 12.0, 11.0, 12.0, 11.0, 10.0, 14.0, 11.0, 15.0, 11.0, 16.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 11.0, 12.0, 11.0, 11.0, 11.0, 13.0, 12.0, 12.0, 11.0, 13.0, 14.0, 13.0, 12.0, 12.0, 11.0, 12.0, 11.0, 13.0, 12.0, 13.0, 11.0, 14.0, 13.0, 13.0, 12.0, 12.0, 11.0, 12.0, 11.0, 12.0, 11.0, 13.0, 15.0, 13.0, 13.0, 10.0, 10.0, 11.0, 12.0, 12.0, 11.0, 13.0, 13.0, 13.0, 14.0, 12.0, 12.0, 14.0, 12.0, 11.0, 12.0, 11.0, 11.0, 11.0, 10.0, 11.0, 12.0, 15.0, 11.0, 12.0, 12.0, 12.0, 11.0, 13.0, 12.0, 13.0, 11.0, 13.0, 12.0, 12.0, 13.0, 11.0, 12.0, 12.0, 12.0, 12.0, 19.0, 12.0, 13.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 11.0, 11.0, 10.0, 11.0, 10.0, 12.0, 10.0, 12.0, 10.0, 11.0, 11.0, 12.0, 12.0, 11.0, 12.0, 11.0, 12.0, 12.0, 12.0, 10.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 13.0, 12.0, 13.0, 10.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 12.0, 13.0, 15.0, 12.0, 12.0, 12.0, 12.0, 11.0, 11.0, 10.0, 11.0, 11.0, 12.0, 11.0, 12.0, 11.0, 13.0, 12.0, 13.0, 13.0, 12.0, 14.0, 12.0, 12.0, 12.0, 12.0, 11.0, 11.0, 11.0, 12.0, 11.0, 11.0, 10.0, 11.0, 10.0, 14.0, 17.0, 13.0, 14.0, 17.0, 13.0, 13.0, 15.0, 13.0, 12.0, 12.0, 12.0, 12.0, 11.0, 12.0, 11.0, 14.0, 12.0, 11.0, 11.0, 11.0, 11.0, 13.0, 13.0, 13.0, 10.0, 13.0, 16.0, 15.0, 14.0, 12.0, 12.0, 12.0, 12.0, 11.0, 12.0, 11.0, 12.0, 10.0, 11.0, 13.0, 10.0, 13.0, 11.0, 12.0, 12.0, 12.0, 11.0, 12.0, 12.0, 13.0, 15.0, 11.0, 10.0, 12.0, 12.0, 12.0, 12.0, 13.0, 13.0, 12.0, 11.0, 11.0, 11.0, 11.0, 13.0, 12.0, 12.0, 15.0, 13.0, 11.0, 14.0, 13.0, 13.0, 13.0, 12.0, 12.0, 12.0, 12.0, 13.0, 12.0, 12.0, 13.0, 15.0, 14.0, 15.0, 13.0, 14.0, 17.0, 18.0, 16.0, 14.0, 15.0, 14.0, 15.0, 17.0, 12.0, 12.0, 12.0, 11.0, 11.0, 14.0, 11.0, 12.0, 10.0, 11.0, 11.0, 11.0, 11.0, 11.0, 12.0, 11.0, 11.0, 12.0, 11.0, 12.0, 10.0, 14.0, 10.0, 12.0, 12.0, 12.0, 12.0, 12.0, 14.0, 11.0, 12.0, 11.0, 11.0, 11.0, 11.0, 13.0, 12.0, 12.0, 11.0, 10.0, 11.0, 10.0, 11.0, 10.0, 12.0, 10.0, 12.0, 10.0, 11.0, 12.0, 12.0, 12.0, 12.0, 11.0, 11.0, 11.0, 11.0, 12.0, 11.0, 12.0, 12.0, 12.0, 14.0, 14.0, 12.0, 12.0, 11.0, 12.0, 10.0, 11.0, 11.0, 13.0, 11.0, 12.0, 11.0, 13.0, 12.0, 14.0, 11.0, 11.0, 12.0, 12.0, 11.0, 12.0, 13.0, 12.0, 12.0, 13.0, 11.0, 13.0, 14.0, 12.0, 12.0, 12.0, 12.0, 11.0, 12.0, 10.0, 12.0, 11.0, 11.0, 11.0, 12.0, 11.0, 11.0, 13.0, 12.0, 12.0, 12.0, 14.0, 12.0, 12.0, 14.0, 12.0, 12.0, 12.0, 12.0, 14.0, 12.0, 12.0, 12.0, 12.0, 11.0, 12.0, 11.0, 11.0, 12.0, 11.0, 12.0, 11.0, 13.0, 11.0, 13.0, 12.0, 12.0, 13.0, 13.0, 13.0, 11.0, 10.0, 12.0, 12.0, 11.0, 11.0, 12.0, 12.0, 12.0, 12.0, 11.0, 12.0, 12.0, 11.0, 11.0, 11.0, 11.0, 12.0, 11.0, 10.0, 14.0, 13.0, 14.0, 15.0])
middle_data = np.array([17.0, 19.0, 16.0, 13.0, 17.0, 14.0, 18.0, 15.0, 9.0, 12.0, 11.0, 12.0, 15.0, 12.0, 13.0, 14.0, 14.0, 14.0, 14.0, 16.0, 13.0, 14.0, 16.0, 15.0, 16.0, 16.0, 19.0, 16.0, 17.0, 18.0, 16.0, 11.0, 13.0, 12.0, 15.0, 15.0, 14.0, 10.0, 10.0, 16.0, 9.0, 14.0, 7.0, 17.0, 10.0, 16.0, 10.0, 16.0, 10.0, 15.0, 13.0, 12.0, 12.0, 12.0, 11.0, 17.0, 12.0, 16.0, 9.0, 15.0, 10.0, 19.0, 11.0, 15.0, 11.0, 15.0, 11.0, 16.0, 18.0, 17.0, 17.0, 17.0, 16.0, 15.0, 15.0, 17.0, 13.0, 15.0, 15.0, 14.0, 16.0, 11.0, 15.0, 14.0, 14.0, 17.0, 14.0, 15.0, 16.0, 16.0, 14.0, 16.0, 16.0, 10.0, 11.0, 12.0, 10.0, 15.0, 11.0, 11.0, 9.0, 11.0, 14.0, 16.0, 15.0, 10.0, 9.0, 10.0, 13.0, 10.0, 9.0, 10.0, 10.0, 12.0, 15.0, 13.0, 12.0, 17.0, 13.0, 15.0, 11.0, 14.0, 19.0, 17.0, 13.0, 19.0, 10.0, 12.0, 9.0, 14.0, 9.0, 14.0, 11.0, 9.0, 9.0, 10.0, 9.0, 16.0, 8.0, 8.0, 9.0, 8.0, 6.0, 7.0, 15.0, 13.0, 14.0, 17.0, 13.0, 14.0, 7.0, 19.0, 8.0, 14.0, 11.0, 11.0, 10.0, 10.0, 12.0, 9.0, 14.0, 9.0, 14.0, 10.0, 10.0, 9.0, 10.0, 8.0, 16.0, 8.0, 8.0, 9.0, 8.0, 7.0, 7.0, 15.0, 14.0, 13.0, 17.0, 12.0, 14.0, 7.0, 16.0, 7.0, 12.0, 10.0, 11.0, 10.0, 15.0, 18.0, 18.0, 19.0, 15.0, 18.0, 15.0, 18.0, 16.0, 10.0, 12.0, 13.0, 11.0, 13.0, 13.0, 17.0, 12.0, 13.0, 13.0, 15.0, 14.0, 19.0, 11.0, 9.0, 19.0, 10.0, 9.0, 10.0, 10.0, 12.0, 11.0, 11.0, 9.0, 15.0, 12.0, 12.0, 13.0, 15.0, 13.0, 16.0, 15.0, 11.0, 13.0, 10.0, 13.0, 9.0, 12.0, 9.0, 12.0, 11.0, 12.0, 10.0, 14.0, 9.0, 18.0, 9.0, 17.0, 11.0, 16.0, 14.0, 17.0, 12.0, 11.0, 7.0, 18.0, 11.0, 18.0, 15.0, 10.0, 10.0, 10.0, 11.0, 12.0, 11.0, 10.0, 11.0, 13.0, 10.0, 12.0, 15.0, 11.0, 9.0, 14.0, 8.0, 11.0, 8.0, 15.0, 8.0, 12.0, 7.0, 12.0, 11.0, 11.0, 8.0, 15.0, 10.0, 14.0, 16.0, 17.0, 12.0, 17.0, 11.0, 9.0, 13.0, 19.0, 18.0, 14.0, 14.0, 16.0, 15.0, 16.0, 19.0, 13.0, 14.0, 14.0, 16.0, 15.0, 14.0, 18.0, 10.0, 13.0, 12.0, 11.0, 19.0, 17.0, 13.0, 11.0, 13.0, 15.0, 11.0, 16.0, 12.0, 11.0, 12.0, 9.0, 8.0, 10.0, 12.0, 9.0, 19.0, 8.0, 18.0, 9.0, 9.0, 8.0, 16.0, 13.0, 18.0, 8.0, 12.0, 11.0, 13.0, 19.0, 13.0, 9.0, 12.0, 14.0, 12.0, 11.0, 12.0, 10.0, 18.0, 13.0, 17.0, 13.0, 18.0, 16.0, 13.0, 16.0, 12.0, 14.0, 14.0, 12.0, 13.0, 15.0, 13.0, 15.0, 11.0, 13.0, 13.0, 15.0, 13.0, 16.0, 18.0, 16.0, 17.0, 11.0, 13.0, 19.0, 15.0, 19.0, 15.0, 13.0, 12.0, 11.0, 12.0, 11.0, 14.0, 10.0, 11.0, 12.0, 11.0, 12.0, 14.0, 11.0, 16.0, 15.0, 16.0, 19.0, 13.0, 10.0, 9.0, 14.0, 11.0, 13.0, 9.0, 14.0, 9.0, 12.0, 11.0, 17.0, 14.0, 17.0, 13.0, 17.0, 15.0, 15.0, 19.0, 13.0, 15.0, 18.0, 11.0, 13.0, 16.0, 15.0, 15.0, 13.0, 16.0, 11.0, 14.0, 10.0, 10.0, 12.0, 15.0, 13.0, 10.0, 15.0, 13.0, 16.0, 15.0, 10.0, 13.0, 9.0, 11.0, 10.0, 10.0, 10.0, 10.0, 10.0, 15.0, 10.0, 10.0, 9.0, 10.0, 10.0, 17.0, 10.0, 14.0, 18.0, 13.0, 16.0, 16.0, 17.0, 19.0, 17.0, 15.0, 15.0, 16.0, 16.0, 14.0, 19.0, 17.0, 16.0, 15.0, 12.0, 13.0, 16.0, 13.0, 10.0, 13.0, 14.0, 10.0, 9.0, 11.0, 13.0, 11.0, 9.0, 9.0, 7.0, 10.0, 15.0, 10.0, 15.0, 12.0, 11.0, 10.0, 8.0, 10.0, 9.0, 10.0, 8.0, 12.0, 9.0, 13.0, 10.0, 12.0, 8.0, 12.0, 7.0, 15.0, 15.0, 9.0, 12.0, 19.0, 13.0, 12.0, 15.0, 8.0, 11.0, 9.0, 6.0, 8.0, 6.0, 8.0, 6.0, 8.0, 11.0, 8.0, 6.0, 8.0, 5.0, 10.0, 6.0, 7.0, 5.0, 10.0, 5.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 11.0, 6.0, 6.0, 7.0, 5.0, 6.0, 5.0, 5.0, 5.0, 6.0, 4.0, 5.0, 6.0, 16.0, 13.0, 18.0, 16.0, 10.0, 15.0, 12.0, 17.0, 13.0, 15.0, 12.0, 14.0, 13.0, 15.0, 12.0, 16.0, 12.0, 15.0, 13.0, 14.0, 12.0, 11.0, 11.0, 12.0, 13.0, 13.0, 15.0, 11.0, 11.0, 13.0, 9.0, 15.0, 9.0, 17.0, 8.0, 16.0, 15.0, 13.0, 14.0, 12.0, 14.0, 18.0, 13.0, 16.0, 18.0, 16.0, 13.0, 12.0, 13.0, 14.0, 12.0, 14.0, 18.0, 18.0, 19.0, 15.0, 15.0, 14.0, 19.0, 12.0, 16.0, 17.0, 15.0, 16.0, 15.0, 17.0, 16.0, 17.0, 18.0, 17.0, 19.0, 13.0, 12.0, 19.0, 13.0, 13.0, 13.0, 10.0, 13.0, 12.0, 16.0, 11.0, 12.0, 17.0, 13.0, 15.0, 15.0, 17.0, 14.0, 14.0, 17.0, 14.0, 19.0, 19.0, 15.0, 12.0, 12.0, 12.0, 17.0, 13.0, 16.0, 14.0, 10.0, 13.0, 12.0, 13.0, 12.0, 12.0, 12.0, 13.0, 16.0, 14.0, 14.0, 15.0, 15.0, 16.0, 16.0, 16.0, 16.0, 17.0, 15.0, 18.0, 17.0, 18.0, 18.0, 17.0, 19.0, 15.0, 15.0, 18.0, 15.0, 17.0, 13.0, 18.0, 19.0, 18.0, 19.0, 19.0, 19.0, 19.0, 19.0, 16.0, 14.0, 12.0, 12.0, 12.0, 10.0, 13.0, 9.0, 14.0, 9.0, 12.0, 11.0, 14.0, 11.0, 15.0, 13.0, 12.0, 12.0, 18.0, 12.0, 13.0, 14.0, 12.0, 8.0, 10.0, 9.0, 11.0, 8.0, 10.0, 9.0, 10.0, 13.0, 11.0, 15.0, 11.0, 16.0, 10.0, 16.0, 14.0, 17.0, 14.0, 12.0, 17.0, 13.0, 17.0, 14.0, 14.0, 14.0, 14.0, 13.0, 14.0, 11.0, 11.0, 12.0, 11.0, 15.0, 12.0, 15.0, 18.0, 16.0, 14.0, 14.0, 17.0, 14.0, 17.0, 12.0, 14.0, 17.0, 16.0, 16.0, 16.0, 14.0, 18.0, 16.0, 16.0, 10.0, 11.0, 12.0, 12.0, 12.0, 13.0, 13.0, 14.0, 13.0, 15.0, 11.0, 11.0, 12.0, 11.0, 11.0, 11.0, 16.0, 11.0, 10.0, 11.0, 18.0, 11.0, 12.0, 12.0, 12.0, 11.0, 11.0, 13.0, 12.0, 12.0, 13.0, 13.0, 12.0, 13.0, 13.0, 10.0, 12.0, 11.0, 12.0, 11.0, 12.0, 10.0, 12.0, 10.0, 15.0, 13.0, 10.0, 13.0, 12.0, 14.0, 14.0, 11.0, 14.0, 12.0, 11.0, 14.0, 12.0, 16.0, 14.0, 16.0, 12.0, 11.0, 16.0, 19.0, 17.0, 10.0, 19.0, 13.0, 18.0, 11.0, 13.0, 15.0, 16.0, 11.0, 15.0, 17.0, 19.0, 16.0, 18.0, 13.0, 10.0, 9.0, 12.0, 8.0, 18.0, 11.0, 19.0, 11.0, 11.0, 18.0, 8.0, 14.0, 11.0, 17.0, 12.0, 12.0, 11.0, 11.0, 10.0, 19.0, 10.0, 10.0, 11.0, 9.0, 14.0, 10.0, 12.0, 12.0, 12.0, 8.0, 9.0, 12.0, 9.0, 8.0, 14.0, 8.0, 8.0, 8.0, 8.0, 9.0, 13.0, 9.0, 13.0, 13.0, 15.0, 14.0, 15.0, 7.0, 16.0, 13.0, 14.0, 11.0, 18.0, 10.0, 15.0, 9.0, 9.0, 11.0, 9.0, 16.0, 10.0, 8.0, 9.0, 9.0, 15.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 12.0, 9.0, 15.0, 9.0, 10.0, 11.0, 10.0, 10.0, 10.0, 12.0, 14.0, 12.0, 16.0, 10.0, 8.0, 8.0, 7.0, 9.0, 7.0, 15.0, 7.0, 15.0, 18.0, 14.0, 14.0, 12.0, 12.0, 12.0, 13.0, 11.0, 12.0, 12.0, 11.0, 16.0, 15.0, 16.0, 12.0, 15.0, 12.0, 18.0, 12.0, 12.0, 12.0, 13.0, 14.0, 15.0, 13.0, 13.0, 13.0, 13.0, 14.0, 13.0, 16.0, 13.0, 16.0, 13.0, 15.0, 13.0, 13.0, 12.0, 10.0, 12.0, 10.0, 13.0, 9.0, 10.0, 10.0, 12.0, 10.0, 11.0, 9.0, 10.0, 8.0, 10.0, 8.0, 7.0, 9.0, 13.0, 9.0, 10.0, 7.0, 8.0, 8.0, 8.0, 10.0, 10.0, 10.0, 9.0, 9.0, 18.0, 9.0, 8.0, 8.0, 7.0, 7.0, 15.0, 11.0, 13.0, 17.0, 18.0, 12.0, 16.0, 13.0, 19.0, 13.0, 16.0, 19.0, 16.0, 17.0, 18.0, 12.0, 17.0, 11.0, 13.0, 16.0, 14.0, 11.0, 17.0, 16.0, 10.0, 17.0, 11.0, 14.0, 13.0, 10.0, 13.0, 12.0, 13.0, 12.0, 14.0, 12.0, 13.0, 10.0, 13.0, 12.0, 14.0, 13.0, 11.0, 11.0, 13.0, 12.0, 12.0, 11.0, 11.0, 11.0, 11.0, 12.0, 11.0, 12.0, 10.0, 15.0, 12.0, 13.0, 17.0, 15.0, 10.0, 12.0, 9.0, 12.0, 9.0, 13.0, 7.0, 11.0])
endgame_data = np.array([17.0, 12.0, 19.0, 13.0, 13.0, 17.0, 17.0, 15.0, 13.0, 17.0, 12.0, 7.0, 8.0, 9.0, 9.0, 5.0, 15.0, 5.0, 5.0, 12.0, 6.0, 5.0, 11.0, 11.0, 13.0, 9.0, 9.0, 8.0, 14.0, 9.0, 8.0, 7.0, 15.0, 9.0, 16.0, 17.0, 17.0, 17.0, 7.0, 5.0, 8.0, 4.0, 16.0, 10.0, 9.0, 6.0, 10.0, 8.0, 6.0, 14.0, 4.0, 4.0, 10.0, 8.0, 6.0, 6.0, 8.0, 7.0, 6.0, 6.0, 8.0, 7.0, 7.0, 12.0, 11.0, 13.0, 13.0, 14.0, 6.0, 6.0, 6.0, 9.0, 7.0, 5.0, 12.0, 5.0, 6.0, 18.0, 4.0, 5.0, 3.0, 6.0, 4.0, 4.0, 4.0, 9.0, 3.0, 16.0, 3.0, 8.0, 13.0, 10.0, 17.0, 7.0, 7.0, 8.0, 16.0, 10.0, 7.0, 14.0, 4.0, 4.0, 4.0, 3.0, 3.0, 2.0, 2.0, 3.0, 5.0, 2.0, 12.0, 2.0, 3.0, 5.0, 2.0, 2.0, 4.0, 2.0, 10.0, 3.0, 3.0, 9.0, 3.0, 7.0, 7.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 9.0, 8.0, 8.0, 10.0, 7.0, 8.0, 8.0, 9.0, 16.0, 8.0, 8.0, 17.0, 8.0, 6.0, 9.0, 7.0, 6.0, 8.0, 6.0, 7.0, 6.0, 12.0, 11.0, 9.0, 11.0, 17.0, 4.0, 3.0, 4.0, 17.0, 3.0, 7.0, 3.0, 3.0, 4.0, 1.0, 18.0, 1.0, 2.0, 1.0, 9.0, 1.0, 2.0, 17.0, 2.0, 1.0, 2.0, 6.0, 2.0, 2.0, 2.0, 7.0, 2.0, 2.0, 5.0, 2.0, 2.0, 3.0, 2.0, 15.0, 2.0, 1.0, 9.0, 1.0, 19.0, 8.0, 15.0, 13.0, 19.0, 11.0, 18.0, 12.0, 13.0, 15.0, 10.0, 10.0, 17.0, 13.0, 15.0, 13.0, 15.0, 16.0, 18.0, 17.0, 14.0, 19.0, 17.0, 13.0, 14.0, 7.0, 19.0, 8.0, 14.0, 11.0, 11.0, 10.0, 10.0, 12.0, 12.0, 9.0, 12.0, 9.0, 11.0, 9.0, 10.0, 11.0, 11.0, 15.0, 13.0, 16.0, 17.0, 13.0, 10.0, 13.0, 11.0, 13.0, 5.0, 4.0, 4.0, 4.0, 8.0, 4.0, 4.0, 12.0, 4.0, 4.0, 3.0, 4.0, 4.0, 7.0, 3.0, 17.0, 4.0, 16.0, 4.0, 5.0, 9.0, 17.0, 12.0, 12.0, 16.0, 12.0, 9.0, 10.0, 1.0, 17.0, 13.0, 19.0, 19.0, 19.0, 19.0, 19.0, 17.0, 14.0, 16.0, 12.0, 13.0, 12.0, 6.0, 15.0, 5.0, 8.0, 5.0, 8.0, 7.0, 7.0, 5.0, 6.0, 3.0, 9.0, 5.0, 5.0, 4.0, 5.0, 15.0, 4.0, 3.0, 6.0, 4.0, 4.0, 11.0, 1.0, 9.0, 6.0, 5.0, 6.0, 5.0, 3.0, 2.0, 7.0, 2.0, 6.0, 4.0, 2.0, 2.0, 5.0, 1.0, 3.0, 2.0, 3.0, 1.0, 4.0, 12.0, 1.0, 1.0, 1.0, 1.0, 5.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 7.0, 2.0, 1.0, 3.0, 14.0, 15.0, 4.0, 5.0, 2.0, 4.0, 3.0, 5.0, 3.0, 2.0, 5.0, 4.0, 2.0, 14.0, 2.0, 16.0, 3.0, 3.0, 3.0, 6.0, 5.0, 5.0, 3.0, 2.0, 9.0, 4.0, 4.0, 3.0, 2.0, 5.0, 4.0, 3.0, 4.0, 5.0, 2.0, 7.0, 4.0, 2.0, 12.0, 2.0, 9.0, 3.0, 11.0, 2.0, 7.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 7.0, 4.0, 1.0, 5.0, 1.0, 1.0, 1.0, 3.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 17.0, 9.0, 4.0, 2.0, 2.0, 2.0, 3.0, 3.0, 4.0, 1.0, 2.0, 2.0, 17.0, 6.0, 2.0, 1.0, 15.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 3.0, 13.0, 2.0, 12.0, 17.0, 12.0, 11.0, 12.0, 12.0, 10.0, 12.0, 12.0, 16.0, 12.0, 13.0, 13.0, 13.0, 14.0, 15.0, 17.0, 14.0, 14.0, 16.0, 19.0, 15.0, 19.0, 18.0, 14.0, 5.0, 5.0, 3.0, 5.0, 17.0, 5.0, 3.0, 3.0, 2.0, 3.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 6.0, 2.0, 3.0, 4.0, 4.0, 4.0, 3.0, 4.0, 2.0, 2.0, 1.0, 17.0, 17.0, 15.0, 1.0, 2.0, 5.0, 4.0, 5.0, 7.0, 4.0, 7.0, 5.0, 7.0, 4.0, 7.0, 5.0, 7.0, 12.0, 8.0, 4.0, 5.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 8.0, 2.0, 13.0, 2.0, 17.0, 3.0, 1.0, 1.0, 1.0, 3.0, 1.0, 1.0, 3.0, 1.0, 1.0, 4.0, 3.0, 1.0, 2.0, 1.0, 4.0, 1.0, 1.0, 1.0, 14.0, 1.0, 15.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 16.0, 2.0, 7.0, 1.0, 2.0, 4.0, 6.0, 7.0, 16.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 3.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 5.0, 4.0, 3.0, 13.0, 3.0, 3.0, 3.0, 2.0, 2.0, 1.0, 6.0, 1.0, 3.0, 7.0, 6.0, 6.0, 11.0, 9.0, 8.0, 4.0, 9.0, 3.0, 11.0, 2.0, 9.0, 2.0, 5.0, 2.0, 5.0, 3.0, 7.0, 17.0, 8.0, 1.0, 2.0, 12.0, 3.0, 4.0, 2.0, 3.0, 5.0, 2.0, 3.0, 2.0, 13.0, 17.0, 10.0, 7.0, 7.0, 16.0, 8.0, 4.0, 5.0, 4.0, 2.0, 7.0, 2.0, 2.0, 2.0, 5.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 1.0, 1.0, 8.0, 1.0, 1.0, 1.0, 1.0, 1.0, 5.0, 14.0, 7.0, 2.0, 7.0, 2.0, 6.0, 6.0, 5.0, 2.0, 15.0, 1.0, 3.0, 1.0, 2.0, 16.0, 14.0, 17.0, 11.0, 10.0, 9.0, 10.0, 12.0, 10.0, 8.0, 16.0, 7.0, 5.0, 6.0, 8.0, 6.0, 8.0, 6.0, 5.0, 9.0, 5.0, 4.0, 6.0, 4.0, 11.0, 5.0, 6.0, 5.0, 5.0, 3.0, 3.0, 5.0, 5.0, 13.0, 12.0, 19.0, 18.0, 15.0, 16.0, 18.0, 14.0, 14.0, 11.0, 14.0, 11.0, 13.0, 12.0, 14.0, 13.0, 15.0, 14.0, 13.0, 15.0, 14.0, 16.0, 14.0, 15.0, 12.0, 18.0, 12.0, 8.0, 1.0, 1.0, 1.0, 1.0, 6.0, 1.0, 7.0, 17.0, 1.0, 16.0, 1.0, 1.0, 5.0, 1.0, 15.0, 2.0, 5.0, 8.0, 5.0, 2.0, 11.0, 1.0, 13.0, 6.0, 12.0, 15.0, 16.0, 17.0, 18.0, 14.0, 14.0, 17.0, 16.0, 15.0, 16.0, 18.0, 16.0, 16.0, 16.0, 18.0, 17.0, 13.0, 13.0, 18.0, 14.0, 15.0, 17.0, 19.0, 12.0, 10.0, 15.0, 18.0, 16.0, 17.0, 15.0, 19.0, 16.0, 11.0, 16.0, 15.0, 18.0, 19.0, 17.0, 17.0, 17.0, 14.0, 17.0, 19.0, 8.0, 12.0, 9.0, 12.0, 7.0, 6.0, 15.0, 7.0, 14.0, 9.0, 12.0, 7.0, 8.0, 5.0, 9.0, 9.0, 5.0, 18.0, 7.0, 7.0, 7.0, 4.0, 3.0, 15.0, 3.0, 2.0, 3.0, 2.0, 3.0, 8.0, 3.0, 3.0, 14.0, 3.0, 13.0, 3.0, 2.0, 12.0, 4.0, 9.0, 5.0, 5.0, 4.0, 6.0, 4.0, 5.0, 5.0, 5.0, 15.0, 4.0, 3.0, 10.0, 3.0, 2.0, 2.0, 3.0, 17.0, 1.0, 7.0, 1.0, 9.0, 1.0, 1.0, 2.0, 1.0, 2.0, 4.0, 2.0, 3.0, 2.0, 3.0, 17.0, 7.0, 7.0, 8.0, 7.0, 6.0, 5.0, 5.0, 5.0, 6.0, 5.0, 6.0, 6.0, 5.0, 16.0, 5.0, 4.0, 13.0, 4.0, 12.0, 4.0, 12.0, 4.0, 5.0, 13.0, 4.0, 12.0, 3.0, 9.0, 4.0, 10.0, 4.0, 3.0, 4.0, 2.0, 2.0, 1.0, 16.0, 18.0, 15.0, 18.0, 9.0, 14.0, 7.0, 6.0, 10.0, 9.0, 10.0, 8.0, 9.0, 8.0, 8.0, 8.0, 10.0, 19.0, 19.0, 9.0, 19.0, 8.0, 10.0, 9.0, 8.0, 19.0, 19.0, 19.0, 18.0, 11.0, 5.0, 7.0, 8.0, 7.0, 7.0, 10.0, 10.0, 11.0, 10.0, 6.0, 6.0, 11.0, 8.0, 8.0, 9.0, 8.0, 6.0, 10.0, 5.0, 14.0, 5.0, 5.0, 4.0, 5.0, 4.0, 4.0, 5.0, 7.0, 5.0, 4.0, 4.0, 5.0, 7.0, 5.0, 6.0, 1.0, 1.0, 3.0, 1.0, 4.0, 10.0, 4.0, 1.0, 1.0, 3.0, 1.0, 1.0, 4.0, 1.0, 1.0, 1.0, 11.0, 2.0, 13.0, 1.0, 13.0, 1.0, 5.0, 1.0, 3.0, 15.0, 2.0, 7.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 7.0, 3.0, 1.0, 17.0, 3.0, 1.0, 3.0, 5.0, 10.0, 1.0, 3.0, 18.0, 1.0, 1.0, 3.0, 1.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 7.0, 1.0, 6.0, 5.0, 1.0, 10.0, 1.0, 4.0, 1.0, 4.0, 2.0, 2.0, 5.0, 16.0, 9.0, 12.0, 14.0, 15.0, 17.0, 14.0, 14.0, 15.0, 17.0, 13.0, 16.0, 12.0, 19.0, 19.0, 19.0, 11.0, 12.0, 4.0, 5.0, 5.0, 4.0, 4.0, 3.0, 11.0, 10.0, 13.0, 13.0, 11.0, 13.0, 9.0, 15.0, 12.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 11.0, 12.0, 15.0, 14.0, 12.0, 14.0, 10.0, 17.0, 14.0, 17.0, 12.0, 12.0, 9.0, 9.0, 9.0, 11.0])

# Function to calculate the mean, standard deviation, and 95% confidence interval
def calculate_stats(data):
    mean = np.mean(data)
    std_dev = np.std(data, ddof=1)  # Use ddof=1 for unbiased estimate of standard deviation
    ci = stats.t.interval(0.99, len(data) - 1, loc=mean, scale=stats.sem(data))
    return mean, std_dev, ci

# Calculate the statistics for each stage
opening_mean, opening_std_dev, opening_ci = calculate_stats(opening_data)
middle_mean, middle_std_dev, middle_ci = calculate_stats(middle_data)
endgame_mean, endgame_std_dev, endgame_ci = calculate_stats(endgame_data)

# Print the results
print("Opening stage: Mean = {:.2f}, Standard Deviation = {:.2f}, 95% CI = ({:.2f}, {:.2f})"
      .format(opening_mean, opening_std_dev, opening_ci[0], opening_ci[1]))
print("Middle stage: Mean = {:.2f}, Standard Deviation = {:.2f}, 95% CI = ({:.2f}, {:.2f})"
      .format(middle_mean, middle_std_dev, middle_ci[0], middle_ci[1]))
print("Endgame stage: Mean = {:.2f}, Standard Deviation = {:.2f}, 95% CI = ({:.2f}, {:.2f})"
      .format(endgame_mean, endgame_std_dev, endgame_ci[0], endgame_ci[1]))
